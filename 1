https://venturebeat.com/2015/12/31/software-with-the-most-vulnerabilities-in-2015-mac-os-x-ios-and-flash/
https://venturebeat.com/2015/12/31/software-with-the-most-vulnerabilities-in-2015-mac-os-x-ios-and-flash/
https://www.synopsys.com/blogs/software-security/detecting-spectre-vulnerability-exploits-with-static-analysis/
https://www.csoonline.com/article/3151003/world-will-need-to-secure-111-billion-lines-of-new-software-code-in-2017.html

								
								
								By Steve Morgan, 
								
								

CSO
|

 PT

 Use commas to separate multiple email addresses Your message has been sent. There was an error emailing this page. It's estimated that there are 111 billion lines of new software code generated by developers every year, according to the 2017 Application Security Report, recently published by Cybersecurity Ventures and scheduled for release next month.(Disclaimer: Steve Morgan is founder and CEO of Cybersecurity Ventures.) That's a whole lotta code that needs to be tested and secured before it reaches the fingertips of consumers, businesses, and governments globally. A software assurance report published by the U.S. Department of Homeland Security (DHS) estimates that 90 percent of reported security incidents result from exploits against defects in the design or code of software. Those figures were researched by the Software Engineering Institute (SEI), a not-for-profit Federally Funded Research and Development Center (FFRDC) at Carnegie Mellon University, specifically established by the U.S. Department of Defense (DoD) to focus on software and cybersecurity. The thought of 2 billion lines of new code being released into the world every week is rather concerning in light of SEI's research and the amount of insecure code that already needs to be addressed. Watson -- IBM's star cybesecurity pupil -- states that there are currently 75,000 documented software vulnerabilities. The number of undocumented vulnerabilities is even greater. Watson is poring through 10,000 security research papers that are published each year and 60,000 security blogs that are written every month -- and is sure to be reporting on scores of new vulnerabilities in 2017. Earlier this year, a CSO story took a look at how to remedy the epidemic of security incidents that result from exploits against defects in software. The big takeaway was that software developers aren't baking security into their day-to-day development process (namely testing and scanning for flaws and vulnerabilities as they go) -- and deferring to harden up web and mobile apps after they've been written. When an app has been fully coded, there's a rush to get it out the door. That's hardly the best time to start thinking about security. At that point, it may be too late. "The best thing (for software developers) to do is accept that security is just as critical to building software as safety is to building airplanes, and make a conscious decision to build security into your software development process" stated Frank Zinghini, founder and CEO at Applied Visions, Inc. (AVI), a software development company focused on cyber security, business applications, and command and control systems to government and commercial customers worldwide. "Worry about software security before you even start writing code, incorporate vulnerability scanning tools into your continuous integration system, and integrate security testing with your quality assurance process" added Zinghini. There's more than 18 million programmers in the world, according to a count by market researcher IDC a couple of years ago. Considering one survey that foundtwo out of three developers are self-taught,it's hard to know exactly how many new programmers are entering the field each year. The SANS Institute 2015 State of Application Security Report helps explain the problem around securing code by stating that many information security engineers dont understand software development, and most software developers dont understand security. Troubling as that sounds, it's hard to disagree. In the U.S., students can graduate from any one of the top 10 computer science programs without taking a single course on cybersecurity.Computer science is a favorite major for aspiring programmers. To sum up the problem... the world has a major application testing and scanning chore on its hands which has been created by self-taught and renegade programmers who've generated a massive amount of insecure code. Then there's the younger programmers who lack formal security training and are charged with building new apps. [ ALSO: Build security into software development ] Manual scanning and remediation of software code defects is simply not possible. There is hope. Poor software development practices are being changed over at large enterprises and more experienced programming shops which are standardized on Static Application Security Testing (SAST) and Dynamic Application Security Testing (DAST) tools which automate the process of finding and eradicating harmful code. Hybrid app security tools will gain traction in 2017, according to the Cybersecurity Ventures report. These next generation tools aim to bring real-time testing, analysis, and code remediation to developers. Playing catch up is not a good place to be when it comes to security . Unfortunately, that's the state of application security right now. Steve Morgan is founder and CEO at Cybersecurity Ventures and editor in chief of the Cybersecurity Market Report. Copyright © 2019 IDG Communications, Inc.
https://www.csoonline.com/article/3151003/world-will-need-to-secure-111-billion-lines-of-new-software-code-in-2017.html
https://www.rand.org/news/press/2017/03/09.html
Drawing upon decades of experience, RAND provides research services, systematic analysis, and innovative thinking to a global clientele that includes government agencies, foundations, and private-sector firms. The Pardee RAND Graduate School (PRGS.edu) is the largest public policy Ph.D. program in the nation and the only program based at an independent public policy research organization—the RAND Corporation. Assistant Policy Researcher; Ph.D. Candidate, Pardee RAND Graduate School Assistant Policy Researcher, RAND; Ph.D. Candidate, Pardee RAND Graduate School For Release ThursdayMarch 9, 2017 Zero-day software vulnerabilities—security holes that developers haven't fixed or aren't aware of—can lurk undetected for years, leaving software users particularly susceptible to hackers. A new study from the RAND Corporation, based on rare access to a dataset of more than 200 such vulnerabilities, provides insights about what entities should do when they discover them. Until now the big question—whether governments or anyone should publicly disclose or keep quiet about the vulnerabilities—has been difficult to answer because so little is known about how long zero-day vulnerabilities remain undetected or what percentage of them are eventually found by others. The RAND study is the first publicly available research to examine vulnerabilities that are still currently unknown to the public. The research establishes initial baseline metrics that can augment other studies that have relied on manufactured data, findings only from publicly known vulnerabilities, or expert opinion. Based on the dataset, RAND researchers have determined that zero-day vulnerabilities have an average life expectancy—the time between initial private discovery and public disclosure—of 6.9 years. That long timeline plus low collision rates—the likelihood of two people finding the same vulnerability (approximately 5.7 percent per year)—means the level of protection afforded by disclosing a vulnerability may be modest and that keeping quiet about—or “stockpiling”—vulnerabilities may be a reasonable option for those entities looking to both defend their own systems and potentially exploit vulnerabilities in others'. “Typical ‘white hat' researchers have more incentive to notify software vendors of a zero-day vulnerability as soon as they discover it,” said Lillian Ablon, lead author of the study and an information scientist with RAND, a nonprofit research organization. “Others, like system-security-penetration testing firms and ‘grey hat' entities, have incentive to stockpile them. But deciding whether to stockpile or publicly disclose a zero-day vulnerability—or its corresponding exploit—is a game of tradeoffs, particularly for governments.” People who know about these weaknesses may create “exploits,” or code that takes advantage of that vulnerability to access other parts of a system, execute their own code, act as an administrator or perform some other action. One famous example is the Stuxnet worm, which relied on four Microsoft zero-day vulnerabilities to compromise Iran's nuclear program. “Looking at it from the perspective of national governments, if one's adversaries also know about the vulnerability, then publicly disclosing the flaw would help strengthen one's own defense by compelling the affected vendor to implement a patch and protect against the adversary using the vulnerability against them,” Ablon said. “On the other hand, publicly disclosing a vulnerability that isn't known by one's adversaries gives them the upper hand, because the adversary could then protect against any attack using that vulnerability, while still keeping an inventory of vulnerabilities of which only it is aware of in reserve. In that case, stockpiling would be the best option.” Of the more than 200 real-world zero-day vulnerabilities and the exploits that take advantage of them analyzed by RAND, almost 40% are still publicly unknown. Ablon and co-author Andy Bogart were able to determine that 25 percent of vulnerabilities do not survive to 1.5 years and only 25 percent live more than 9.5 years. No vulnerability characteristics indicated a long or short life. However, future analyses may want to examine more closely Linux versus other platform types, the similarity of open and closed source code, and type of exploit class. The study examined what proportion of zero-day vulnerabilities are alive (publicly unknown), dead (publicly known), or somewhere in between. But boiling the argument down to whether vulnerability is “alive” versus “dead” is too simplistic and could create a barrier for vulnerability-detection efforts, Ablon said. A vulnerability may be classified as “immortal” if it's one that will remain in a product in perpetuity because the vendor no longer maintains the code or issues updates. Vulnerabilities that are publicly known are often disclosed with a security advisory or patch, but in other cases, developers or vulnerability researchers post online about a vulnerability without issuing a security advisory. Other vulnerabilities are quasi-alive—“zombies”—because, due to code revisions, they can be exploited in older versions of a product. Once an exploitable vulnerability has been found, a fully functioning exploit may be developed quickly, with a median time of 22 days. That means any serious attacker can likely obtain an affordable zero-day for almost any target, given the typical life expectancies of these vulnerabilities and the short development time. However, most of the price for those wishing to purchase such a zero-day exploit from a developer is driven not by labor but by its inherent value, lack of supply and other factors. Funding for the study, “Zero Days, Thousands of Nights: The Life and Times of Zero-Day Vulnerabilities and their Exploits,” was provided by philanthropic contributions from RAND supporters, income from operations, and from the RAND Institute for Civil Justice, dedicated to improving the civil justice system by supplying policymakers and the public with rigorous and nonpartisan research. Its studies identify trends in litigation and inform policy choices about liability, compensation, regulation, risk management and insurance. The RAND Corporation is a research organization that develops solutions to public policy challenges to help make communities throughout the world safer and more secure, healthier and more prosperous. (703) 414-4795
(310) 451-6913
media@rand.org Lillian Ablon is an information scientist at the RAND Corporation. She conducts research on the intersection of cybersecurity, computer networks, information systems, privacy, commercial technology and public policy in support of the U.S. Department of Defense, U.S. Intelligence Community,… Explore All Topics »  Report  Mar 9, 2017 Lillian Ablon @LilyAblon, Andy Bogart The RAND Corporation is a research organization that develops solutions to public policy challenges to help make communities throughout the world safer and more secure, healthier and more prosperous. RAND is nonprofit, nonpartisan, and committed to the public interest. Subscribe to the weekly Policy Currents newsletter to receive updates on the issues that matter most.
https://www.rand.org/news/press/2017/03/09.html
https://www.infoq.com/presentations/owasp-top-10-vulnerabilities-2017
https://www.infoq.com/presentations/owasp-top-10-vulnerabilities-2017
https://blogs.oracle.com/security/intel-l1tf
Today, Intel disclosed a new set of speculative execution side-channel processor vulnerabilities affecting their processors.    These L1 Terminal Fault (L1TF) vulnerabilities affect a number of Intel processors, and they have received three CVE identifiers: CVE-2018-3615 impacts Intel Software Guard Extensions (SGX) and has a CVSS Base Score of 7.9. CVE-2018-3620 impacts operating systems and System Management Mode (SMM) running on Intel processors and has a CVSS Base Score of 7.1. CVE-2018-3646 impacts virtualization software and Virtual Machine Monitors (VMM) running on Intel processors and has a CVSS Base Score of 7.1 These vulnerabilities derive from a flaw in Intel processors, in which operations performed by a processor while using speculative execution can result in a compromise of the confidentiality of data between threads executing on a physical CPU core.  As with other variants of speculative execution side-channel issues (i.e., Spectre and Meltdown), successful exploitation of L1TF vulnerabilities require the attacker to have the ability to run malicious code on the targeted systems.  Therefore, L1TF vulnerabilities are not directly exploitable against servers which do not allow the execution of untrusted code.  While Oracle has not yet received reports of successful exploitation of this speculative execution side-channel issue “in the wild,” Oracle has worked with Intel and other industry partners to develop technical mitigations against these issues.  The technical steps Intel recommends to mitigate L1TF vulnerabilities on affected systems include: Ensuring that affected Intel processors are running the latest Intel processor microcode. Intel reports that the microcode update  it has released for the Spectre 3a (CVE-2018-3640) and Spectre 4 (CVE-2018-3639) vulnerabilities also contains the microcode instructions which can be used to mitigate the L1TF vulnerabilities. Updated microcode by itself is not sufficient to protect against L1TF. Applying the necessary OS and virtualization software patches against affected systems. To be effective, OS patches will require the presence of the updated Intel processor microcode.  This is because updated microcode by itself is not sufficient to protect against L1TF.  Corresponding OS and virtualization software updates are also required to mitigate the L1TF vulnerabilities present in Intel processors. Disabling Intel Hyper-Threading technology in some situations. Disabling HT alone is not sufficient for mitigating L1TF vulnerabilities. Disabling HT will result in significant performance degradation. In response to the various L1TF Intel processor vulnerabilities: Oracle Hardware Oracle recommends that administrators of x86-based Systems carefully assess the L1TF threat for their systems and implement the appropriate security mitigations.Oracle will provide specific guidance for Oracle Engineered Systems. Oracle has determined that Oracle SPARC servers are not affected by the L1TF vulnerabilities. Oracle has determined that Oracle Intel x86 Servers are not impacted by vulnerability CVE-2018-3615 because the processors in use with these systems do not make use of Intel Software Guard Extensions (SGX). Oracle Operating Systems (Linux and Solaris) and Virtualization Oracle has released security patches for Oracle Linux 7, Oracle Linux 6 and Oracle VM Server for X86 products.  In addition to OS patches, customers should run the current version of the Intel microcode to mitigate these issues.  Oracle Linux customers can take advantage of Oracle Ksplice to apply these updates without needing to reboot their systems. Oracle has determined that Oracle Solaris on x86 is not affected by vulnerabilities CVE-2018-3615 and CVE-2018-3620 regardless of the underlying Intel processor on these systems.  It is however affected by vulnerability CVE-2018-3646 when using Kernel Zones. The necessary patches will be provided at a later date.  Oracle Solaris on SPARC is not affected by the L1TF vulnerabilities. Oracle Cloud The Oracle Cloud Security and DevOps teams continue to work in collaboration with our industry partners on implementing the necessary mitigations to protect customer instances and data across all Oracle Cloud offerings: Oracle Cloud (IaaS, PaaS, SaaS), Oracle NetSuite, Oracle GBU Cloud Services, Oracle Data Cloud, and Oracle Managed Cloud Services.   Oracle’s first priority is to mitigate the risk of tenant-to-tenant attacks. Oracle will notify and coordinate with the affected customers for any required maintenance activities as additional mitigating controls continue to be implemented. Oracle has determined that a number of Oracle's cloud services are not affected by the L1TF vulnerabilities.  They include Autonomous Data Warehouse service, which provides a fully managed database optimized for running data warehouse workloads, and Oracle Autonomous Transaction Processing service, which provides a fully managed database service optimized for running online transaction processing and mixed database workloads.  No further action is required by customers of these services as both were found to require no additional mitigating controls based on service design and are not affected by the L1TF vulnerabilities (CVE-2018-3615, CVE-2018-3620, and CVE-2018-3646).    Bare metal instances in Oracle Cloud Infrastructure (OCI) Compute offer full control of a physical server and require no additional Oracle code to run.  By design, the bare metal instances are isolated from other customer instances on the OCI network whether they be virtual machines or bare metal.  However, for customers running their own virtualization stack on bare metal instances, the L1TF vulnerability could allow a virtual machine to access privileged information from the underlying hypervisor or other VMs on the same bare metal instance.  These customers should review the Intel recommendations about vulnerabilities CVE-2018-3615, CVE-2018-3620, CVE-2018-3646 and make changes to their configurations as they deem appropriate. Note that many industry experts anticipate that new techniques leveraging these processor flaws will continue to be disclosed for the foreseeable future.  Future speculative side-channel processor vulnerabilities are likely to continue to impact primarily operating systems and virtualization platforms, as addressing them will likely require software update and microcode update.  Oracle therefore recommends that customers remain on current security release levels, including firmware, and applicable microcode updates (delivered as Firmware or OS patches), as well as software upgrades.    For more information:
  The information in this blog entry is also published as MOS Note 2434830.1: “Information about the L1TF Intel processor vulnerabilities (CVE-2018-3615, CVE-2018-3620, CVE-2018-3646)” Oracle Linux can refer to the bulletins located at https://linux.oracle.com/cve/CVE-2018-3620.html,  and https://linux.oracle.com/cve/CVE-2018-3646.html Solaris customers should refer to MOS 2434208.1 : “L1 Terminal Fault (CVE-2018-3615, CVE-2018-3620, &amp; CVE-2018-3646) Vulnerabilities” and MOS 2434206.1 : “Disabling x86 Hyperthreading in Oracle Solaris” Oracle x86 hardware customers should refer to MOS 2434171.1 : “L1 Terminal Fault (CVE-2018-3620, CVE-2018-3646) Vulnerabilities on Oracle x86 Servers” For information about the availability of Intel microcode for Oracle hardware, see MOS Note 2406316.1: “CVE-2018-3640 (Spectre v3a), CVE-2018-3639 (Spectre v4) Vulnerabilities: Intel Processor Microcode Availability (Doc ID 2406316.1)” The “Oracle Cloud Security Response to Intel L1TF Vulnerabilities” is located at https://docs.cloud.oracle.com/iaas/Content/Security/Reference/L1TF_response.htm The “Oracle Cloud Infrastructure Customer Advisory for L1TF Impact on the Compute Service” is located at https://docs.cloud.oracle.com/iaas/Content/Security/Reference/L1TF_computeimpact.htm The “Oracle Cloud Infrastructure Customer Advisory for L1TF Impact on the Database Service” is located at https://docs.cloud.oracle.com/iaas/Content/Security/Reference/L1TF_databaseimpact.htm Oracle just released 
Security Alert CVE-2018-11776. This vulnerability affects
Apache Struts 2, a component used in a number of Oracle... Oracle just released 
Security Alert CVE-2018-3110. This vulnerability affects
the Oracle Database versions 11.2.0.4 and 12.2.0.1... 
Oracle today released the


July 2018 Critical Patch
Update.

This 

Critical Patch Update

provided security updates for a wide range of
product...
